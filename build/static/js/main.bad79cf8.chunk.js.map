{"version":3,"sources":["Components/FilterNames.js","Components/AddName.js","Components/Display.js","services/persons.js","Components/alert.js","App.js","index.js"],"names":["Filter","props","type","value","search","onChange","AddPerson","name","onChangeName","number","onChangeNumber","onClick","Name","person","deletePerson","Display","filteredRecords","map","key","id","window","confirm","axios","delete","get","then","respose","data","newObject","post","response","put","Notification","message","classValue","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setSearch","errorMessage","setErrorMessage","useEffect","personService","initialData","event","target","preventDefault","nameObject","console","log","x","filter","parseInt","names","length","alert","returnedData","catch","error","setTimeout","concat","toLowerCase","indexOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bad79cf8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = (props) =>{\r\n  return(\r\n     <p>\r\n        Filter the names <input type=\"text\" value={props.search} onChange={props.onChange}/>\r\n     </p>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from \"react\"\r\n\r\nconst AddPerson = (props) =>{\r\n  return(\r\n   <form>\r\n        <div>\r\n          name: <input value={props.name} onChange={props.onChangeName} />\r\n        </div>\r\n        <div>\r\n          number: <input value={props.number} onChange={props.onChangeNumber} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\" onClick={props.onClick}>\r\n            add\r\n          </button>\r\n        </div>\r\n      </form>\r\n  )\r\n}\r\n\r\nexport default AddPerson","import React   from \"react\" \r\nimport axios from 'axios'\r\n\r\nconst Name = ({person , deletePerson}) =>{\r\n  return(\r\n    <p>\r\n    {person.name} {person.number} <button onClick={deletePerson}>delete</button>\r\n    </p>\r\n  )\r\n}\r\n\r\n\r\nconst Display = ({filteredRecords}) =>{\r\n\r\nconst deletePerson = ({person}) =>{\r\n    if (window.confirm(\"Delete \" + person.name)) { \r\n      axios.delete(`http://localhost:3001/persons/${person.id}`,person)\r\n    }\r\n  }\r\n return(\r\n   <div>\r\n        {filteredRecords().map(person => (\r\n          <Name key={person.id} person={person} deletePerson ={() => deletePerson({person})}/>\r\n        ))}\r\n    </div>\r\n )\r\n}\r\n\r\nexport default Display","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () =>{\r\n    const request = axios.get(baseUrl)\r\n    return request.then(respose =>respose.data)\r\n}\r\n\r\nconst create =  newObject =>{\r\n    const request = axios.post(baseUrl,newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id , newObject) =>{\r\n    const request = axios.put(`${baseUrl}/${id}`,newObject)\r\n    return request.then(response =>response.data)\r\n}\r\n\r\nexport default {getAll, create, update}","import React from 'react'\r\n\r\nconst Notification = ({message, classValue}) =>{\r\n if(message === null)\r\n {\r\n     return null\r\n }\r\n return(\r\n     <div className={classValue} >\r\n         {message}\r\n     </div>\r\n )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./Components/FilterNames\"\nimport AddPerson from \"./Components/AddName\"\nimport Display from \"./Components/Display\"\nimport personService from './services/persons'\nimport Notification from './Components/alert'\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [search,setSearch] = useState(\"\")\n  const [errorMessage, setErrorMessage] = useState({\n    message : null,\n    classValue : \"improvedMessage\"\n  })\n\n  const filteredRecords = () =>{\n    return  persons.filter((person)=>\n  { return person.name.toLowerCase().indexOf(search.toLowerCase()) !== -1 }\n  )\n  }\n  \n  useEffect(()=>{\n    personService.getAll().then(initialData =>{\n        setPersons(initialData)\n      }\n    )\n  },[persons])\n  \n  \n  const handleOnNameChange = event => {\n    setNewName(event.target.value);\n  };\n  const handleOnNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n  const handleOnFieldChanged = event => {\n    setSearch(event.target.value)\n  };\n\n  const addName = event => {\n    event.preventDefault();\n    const nameObject = {\n      name: newName,\n      number: newNumber\n    };\n    console.log(nameObject.number)\n    const x= persons.filter(person => person.name===nameObject.name && person.number === parseInt(nameObject.number))\n    const names = persons.filter(person => person.name===nameObject.name && person.number!==parseInt(nameObject.number))\n    \n    console.log(x.length)\n    if (x.length>0) {\n      alert(`${newName} is already added to phonebook`);\n    } \n    else if(names.length>0){\n      if (window.confirm(`${newName} already added to the phonebook, replace the old number with the new number`)) { \n        personService.update(names[0].id,nameObject).then(returnedData =>\n          setPersons(persons.map(person => person.id !==names.id ? person:returnedData)\n          )\n        ).catch(error =>{\n          setErrorMessage({message :`Information of ${nameObject.name} has already been removed from server`, classValue : \"improvedError\"})\n          setTimeout(() =>{\n            setErrorMessage({message : null ,classValue:\"improvedMessage\"})\n          },5000)\n        })\n    }\n    }\n    else {\n      personService.create(nameObject).then(returnedData =>{\n        setPersons(persons.concat(returnedData));\n        setErrorMessage({message : `Added ${nameObject.name}`,classValue: \"improvedMessage\"})\n        setTimeout(()=>{\n          setErrorMessage({message : null ,classValue:\"improvedMessage\"})\n        },5000)\n      })\n      .catch(error => {\n        console.log(error.response.data)\n        setErrorMessage({message : error.response.data,classValue: \"improvedError\"})\n        setTimeout(()=>{\n          setErrorMessage({message : null ,classValue:\"improvedMessage\"})\n        },5000)\n      })\n      \n    }\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n  \n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message = {errorMessage.message} classValue={errorMessage.classValue}/>\n      <Filter search={search} onChange={handleOnFieldChanged}/>\n      <h2>Add a new person</h2>\n      <AddPerson name={newName} number={newNumber} onChangeName={handleOnNameChange} onChangeNumber={handleOnNumberChange} onClick={addName}/>   \n      <h2>Numbers</h2>\n      <Display filteredRecords={filteredRecords} />\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}